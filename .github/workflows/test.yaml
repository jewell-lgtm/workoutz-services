name: Node.js CI

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install --frozen-lockfile
      - run: yarn test --coverage
      - run: echo "üçè This job's status is ${{ job.status }}."
  #
  #  test-e2e:
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Use Node.js
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 16
  #      - run: yarn install --frozen-lockfile
  #      - name: Connect to PostgreSQL
  #        run: node check-postgres.js
  #        env:
  #          POSTGRES_HOST: postgres
  #          POSTGRES_PORT: 5432
  #      - run: yarn test:e2e --coverage
  #        env:
  #          POSTGRES_HOST: postgres
  #          POSTGRES_PORT: 5432
  #      - run: echo "üçè This job's status is ${{ job.status }}."

  deploy:
    #    needs: [test, test-e2e]
    runs-on: ubuntu-latest
    #    if: github.ref == 'refs/heads/main'
    if: false

    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_ACCOUNT_JSON }}'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: echo "üçè This job's status is ${{ job.status }}."
      - id: 'deploy'
        uses: 'google-github-actions/deploy-appengine@v0'
      - id: 'test'
        run: 'curl "${{ steps.deploy.outputs.url }}"'
