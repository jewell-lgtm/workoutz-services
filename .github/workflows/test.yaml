name: Node.js CI

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install --frozen-lockfile
      - run: yarn test --coverage
      - run: echo "üçè This job's status is ${{ job.status }}."

  test-e2e:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install --frozen-lockfile
      - run: yarn test:e2e --coverage
        env:
          # The hostname used to communicate with the PostgreSQL service container
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      - run: echo "üçè This job's status is ${{ job.status }}."

  deploy:
    needs: [test, test-e2e]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SERVICE_ACCOUNT_JSON }}'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: yarn install --frozen-lockfile
      - run: yarn build
      - run: echo "üçè This job's status is ${{ job.status }}."
      - id: 'deploy'
        uses: 'google-github-actions/deploy-appengine@v0'
      - id: 'test'
        run: 'curl "${{ steps.deploy.outputs.url }}"'
